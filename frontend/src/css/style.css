@charset "UTF-8";
@import url(../scss/vendors/bootstrap.min.css);
@font-face {
  font-family: "icomoon";
  src: url("../icons/icomoon/icomoon.eot?8xm7dx");
  src: url("../icons/icomoon/icomoon.eot?8xm7dx#iefix") format("embedded-opentype"), url("../icons/icomoon/icomoon.ttf?8xm7dx") format("truetype"), url("../icons/icomoon/icomoon.woff?8xm7dx") format("woff"), url("../icons/icomoon/icomoon.svg?8xm7dx#icomoon") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block; }

[class^="icon-"],
[class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: "icomoon" !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-add-to-cart:before {
  content: ""; }

.icon-call:before {
  content: ""; }

.icon-card-right-arrow:before {
  content: ""; }

.icon-envelope:before {
  content: ""; }

.icon-facebook:before {
  content: ""; }

.icon-google:before {
  content: ""; }

.icon-Instagram:before {
  content: ""; }

.icon-left-arrow:before {
  content: ""; }

.icon-location:before {
  content: ""; }

.icon-padlock:before {
  content: ""; }

.icon-search:before {
  content: ""; }

.icon-share:before {
  content: ""; }

.icon-slider-left-arrow:before {
  content: ""; }

.icon-slider-right-arrow:before {
  content: ""; }

.icon-twitter:before {
  content: ""; }

.fw-semibold {
  font-weight: 600; }

.fs-14 {
  font-size: 14px; }

.bg-red {
  background: red; }

.bg-black-900 {
  background: #2f232b; }

.bg-white-100 {
  background: #feefdc; }

.bg-orange-300 {
  background: #d14900; }

.bg-orange {
  background: #ff7700; }

.bg-blue-100 {
  background: #7591ff; }

.bg-violet {
  background: #5a2682; }

.bg-violet-500 {
  background: #431c63; }

.bg-violet-600 {
  background: #4f2173; }

.bg-platinum {
  background: #ebebeb; }

.bg-silver {
  background: #c8c7cc; }

.bg-silver-600 {
  background: #707070; }

.bg-azure {
  background: #4387f4; }

.bg-gray-500 {
  background: #97979b; }

.text-red {
  color: red; }

.text-black-900 {
  color: #2f232b; }

.text-white-100 {
  color: #feefdc; }

.text-orange-300 {
  color: #d14900; }

.text-orange {
  color: #ff7700; }

.text-blue-100 {
  color: #7591ff; }

.text-violet {
  color: #5a2682; }

.text-violet-500 {
  color: #431c63; }

.text-violet-600 {
  color: #4f2173; }

.text-platinum {
  color: #ebebeb; }

.text-silver {
  color: #c8c7cc; }

.text-silver-600 {
  color: #707070; }

.text-azure {
  color: #4387f4; }

.text-gray-500 {
  color: #97979b; }

.header .navbar-nav form {
  display: flex; }

.main .slider .owl-dots, .main .booking .img-wrapper, .main .organizers-card, .signup__content {
  display: flex;
  align-items: center;
  justify-content: center; }

.header__right {
  display: flex;
  align-items: center;
  justify-content: space-between; }

.btn, .main .featured__events [class*="col-"] .wish {
  display: grid;
  place-items: center; }

html {
  box-sizing: border-box;
  font-size: 16px; }

*,
*::before,
*::after {
  box-sizing: inherit; }

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ol,
ul,
figure,
blockquote {
  padding: 0;
  margin: 0;
  font-family: "Montserrat";
  font-weight: normal; }

a {
  color: white;
  text-decoration: none; }

a:hover {
  color: white; }

ol,
ul {
  list-style: none;
  cursor: pointer; }

img {
  max-width: 100%;
  height: auto; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-thin-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-thin-webfont.woff") format("woff");
  font-weight: 100;
  font-style: normal; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-extralight-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-extralight-webfont.woff") format("woff");
  font-weight: 200;
  font-style: normal; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-light-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-light-webfont.woff") format("woff");
  font-weight: 300;
  font-style: normal; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-regular-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-regular-webfont.woff") format("woff");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-medium-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-medium-webfont.woff") format("woff");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-semibold-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-semibold-webfont.woff") format("woff");
  font-weight: 600;
  font-style: normal; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-bold-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-bold-webfont.woff") format("woff");
  font-weight: 700;
  font-style: normal; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-extrabold-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-extrabold-webfont.woff") format("woff");
  font-weight: 800;
  font-style: normal; }

@font-face {
  font-family: "Montserrat";
  src: url("src/fonts/montserrat/montserrat-black-webfont.woff2") format("woff2"), url("src/fonts/montserrat/montserrat-black-webfont.woff") format("woff");
  font-weight: 900;
  font-style: normal; }

.btn {
  width: 160px;
  min-height: 56px;
  border-radius: 50px;
  font-weight: 600;
  transition: background 0.5s; }
  .btn:hover {
    background: #ff7700; }
  .btn--shadow {
    box-shadow: 7px 7px 14px #431c63, -7px -7px 14px #5a2682; }
    .btn--shadow:focus {
      box-shadow: none; }
    @media (min-width: 992px) {
      .btn--shadow {
        box-shadow: none; } }

.organizers-card__btn {
  margin-top: 36px;
  border: 1px solid #ff7700;
  color: #ff7700; }
  .organizers-card__btn:hover, .organizers-card__btn:focus {
    color: white; }

.header {
  z-index: 10;
  min-height: 112px; }
  .header .navbar-toggler-icon span {
    width: 30px;
    height: 3px;
    border-radius: 50px; }
    .header .navbar-toggler-icon span:nth-child(1) {
      transform: translateY(-8px); }
    .header .navbar-toggler-icon span:nth-child(3) {
      transform: translateY(8px); }
  .header .navbar-brand {
    margin-right: 40px; }
    .header .navbar-brand img:first-child {
      display: none;
      height: 50.76px; }
      @media (min-width: 992px) {
        .header .navbar-brand img:first-child {
          display: block; } }
    .header .navbar-brand img:last-child {
      height: 42px; }
      @media (min-width: 992px) {
        .header .navbar-brand img:last-child {
          display: none; } }
  .header .navbar-nav {
    margin-top: 20px; }
    @media (min-width: 992px) {
      .header .navbar-nav {
        margin-top: 0; } }
    .header .navbar-nav form {
      flex-direction: column;
      justify-content: left;
      gap: 10px;
      max-width: 100%;
      min-height: 64px;
      border-radius: 50px;
      background: transparent; }
      @media (min-width: 576px) {
        .header .navbar-nav form {
          flex-direction: row;
          align-items: center;
          justify-content: space-between;
          gap: 0;
          padding: 0 8px 0 30px;
          background: white; } }
      @media (min-width: 992px) {
        .header .navbar-nav form {
          max-width: 672px; } }
      .header .navbar-nav form div label,
      .header .navbar-nav form div input::placeholder {
        font-size: 14px; }
  :is(.header .navbar__date, .header .navbar__location, .header .navbar__looking-for) {
    width: 100%;
    color: white; }
    @media (min-width: 576px) {
      :is(.header .navbar__date, .header .navbar__location, .header .navbar__looking-for) {
        color: black; } }
    :is(.header .navbar__date, .header .navbar__location, .header .navbar__looking-for) .form-control {
      padding: 8px 12px; }
      @media (min-width: 576px) {
        :is(.header .navbar__date, .header .navbar__location, .header .navbar__looking-for) .form-control {
          padding: 0 0; } }
    :is(.header .navbar__date, .header .navbar__location, .header .navbar__looking-for) .form-control:focus {
      box-shadow: 0 0 0 2px #ff7700; }
  @media (min-width: 576px) {
    .header .navbar__date {
      width: 22%; } }
  @media (min-width: 576px) {
    .header .navbar__location {
      width: 24%; } }
  @media (min-width: 576px) {
    .header .navbar__looking-for {
      width: 37%; } }
  .header .navbar__search-icon {
    width: 56px;
    aspect-ratio: 1 / 1;
    background: #ff7700; }
  .header__btns {
    padding-top: 10px;
    justify-content: space-between; }
    @media (min-width: 576px) {
      .header__btns {
        justify-content: left; } }
    @media (min-width: 992px) {
      .header__btns {
        padding-top: 0; } }
  .header__right {
    gap: 16px;
    height: 55px;
    margin-block: 16px; }
    @media (min-width: 992px) {
      .header__right {
        width: 50%;
        padding-inline: 16px;
        margin-block: 0; } }
    @media (min-width: 1200px) {
      .header__right {
        width: fit-content;
        gap: 24px; } }
    .header__right > div {
      height: 100%;
      font-size: 12px; }
      @media (min-width: 1400px) {
        .header__right > div {
          font-size: 16px; } }
  .header-profile__img {
    width: 32px;
    aspect-ratio: 1 / 1;
    cursor: pointer; }
  .header-profile__dropdown {
    background: transparent;
    border: none; }
    .header-profile__dropdown-menu {
      min-width: fit-content; }

.main {
  z-index: -1;
  margin-top: 148px; }
  .main .slider .owl-nav {
    position: absolute;
    top: 46%;
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding-inline: 16px; }
    .main .slider .owl-nav button {
      width: 32px;
      aspect-ratio: 1 / 1;
      border: 1px solid white;
      border-radius: 50%; }
      @media (min-width: 576px) {
        .main .slider .owl-nav button {
          width: 58px; } }
      .main .slider .owl-nav button:hover {
        border: 2px dotted #ff7700; }
        .main .slider .owl-nav button:hover .icon-slider-left-arrow:before {
          content: "\e90c"; }
        .main .slider .owl-nav button:hover .icon-slider-right-arrow:before {
          content: "\e90d"; }
        .main .slider .owl-nav button:hover .icon-slider-left-arrow:before,
        .main .slider .owl-nav button:hover .icon-slider-right-arrow:before {
          color: #ff7700; }
      .main .slider .owl-nav button span {
        color: white; }
  .main .slider .owl-dots {
    z-index: 9;
    position: relative;
    margin-top: -28px; }
    .main .slider .owl-dots button {
      width: 9px;
      aspect-ratio: 1 / 1;
      border: 2px solid white;
      border-radius: 50%; }
      .main .slider .owl-dots button.active {
        border: none;
        background: #707070; }
      .main .slider .owl-dots button:nth-child(2) {
        margin-inline: 20px; }
  .main .events {
    margin-block: 55px; }
    @media (min-width: 576px) {
      .main .events__category {
        display: flex;
        flex-wrap: wrap;
        gap: 16px; } }
    .main .events__category > * {
      flex-grow: 1; }
    .main .events__card {
      width: 100%;
      min-height: 176px;
      border-radius: 20px; }
      @media (min-width: 576px) {
        .main .events__card {
          width: 226px; } }
      .main .events__card .events__img {
        bottom: 14px;
        display: inherit;
        width: 120px;
        height: 80px;
        background-repeat: no-repeat;
        border-radius: 20px;
        box-shadow: 7px 7px 14px #431c63, -7px -7px 14px #5a2682; }
      .main .events__card:nth-child(1) .events__img {
        right: 12px;
        background-image: url(../images/events-music.svg); }
      .main .events__card:nth-child(2) .events__img {
        right: 8px;
        background-image: url(../images/events-business-and-startups.svg); }
      .main .events__card:nth-child(3) .events__img {
        right: 8px;
        background-image: url(../images/events-arts-and-culture.svg); }
      .main .events__card:nth-child(4) .events__img {
        right: 8px;
        background-image: url(../images/events-film-and-media.svg); }
      .main .events__card:nth-child(5) .events__img {
        right: 8px;
        background-image: url(../images/events-food-and-drink.svg); }
    .main .events__btn {
      width: 32px;
      aspect-ratio: 1 / 1;
      border-radius: 50px;
      margin-top: 20px;
      background: white;
      transition: transform 2s; }
      .main .events__btn:hover {
        background: #ff7700;
        transform: translateX(10px); }
        .main .events__btn:hover .icon-card-right-arrow:before {
          content: "\e902";
          color: white; }
    .main .events .icon-card-right-arrow:before {
      content: "\e902";
      color: #ff7700;
      font-weight: 600; }
  .main .featured__header {
    min-height: 24px; }
  .main .featured__design span {
    display: inline-block;
    height: 4px;
    border-radius: 50px; }
    .main .featured__design span:nth-child(1) {
      width: 48px; }
    .main .featured__design span:nth-child(2) {
      width: 24px; }
  .main .featured__events [class*="col-"] .card {
    height: 100%;
    border: none; }
    .main .featured__events [class*="col-"] .card-img-top {
      width: 100%;
      aspect-ratio: 1 / 0.61;
      background-repeat: no-repeat;
      background-size: cover;
      transition: transform 1s; }
      .main .featured__events [class*="col-"] .card-img-top:hover {
        transform: scale(105%); }
    .main .featured__events [class*="col-"] .card-title h6 {
      font-weight: 500; }
    .main .featured__events [class*="col-"] .card-text {
      font-size: 12px;
      font-weight: 500; }
  .main .featured__events [class*="col-"]:nth-child(1) .card:nth-child(1) .card-img-top {
    background-image: url(../images/qatar-museum-tour.svg); }
  .main .featured__events [class*="col-"]:nth-child(2) .card-img-top {
    background-image: url(../images/doha.svg); }
  .main .featured__events [class*="col-"]:nth-child(3) .card-img-top {
    background-image: url(../images/qatar-sports.svg); }
  .main .featured__events [class*="col-"]:nth-child(4) .card-img-top {
    background-image: url(../images/shaikh-faisal.svg); }
  .main .featured__events [class*="col-"] .wish {
    right: 17px;
    bottom: -16px;
    width: 40px;
    aspect-ratio: 1 / 1;
    background: white;
    border-radius: 50%;
    box-shadow: 0 0 10px #707070; }
    .main .featured__events [class*="col-"] .wish:hover {
      background-color: #ff7700; }
      .main .featured__events [class*="col-"] .wish:hover .icon-add-to-cart:before {
        content: "\e900";
        color: white; }
    .main .featured__events [class*="col-"] .wish .icon-add-to-cart:before {
      content: "\e900";
      color: #707070;
      font-weight: 500; }
  .main .featured__events .icon-share:before {
    content: "\e90b";
    font-size: 24px;
    color: #707070; }
  .main .featured__events .icon-share:hover:before {
    content: "\e90b";
    color: #ff7700; }
  .main .popular__events [class*="col-"]:nth-child(1) .card:nth-child(1) .card-img-top {
    background-image: url(../images/great-qatar.svg); }
  .main .popular__events [class*="col-"]:nth-child(2) .card-img-top {
    background-image: url(../images/pearl-qatar.svg); }
  .main .popular__events [class*="col-"]:nth-child(3) .card-img-top {
    background-image: url(../images/longines.svg); }
  .main .popular__events [class*="col-"]:nth-child(4) .card-img-top {
    background-image: url(../images/tasty-street.svg); }
  .main .recommended__events [class*="col-"]:nth-child(1) .card:nth-child(1) .card-img-top {
    background-image: url(../images/international-handicrafts.svg); }
  .main .recommended__events [class*="col-"]:nth-child(2) .card-img-top {
    background-image: url(../images/international-horticultural.svg); }
  .main .recommended__events [class*="col-"]:nth-child(3) .card-img-top {
    background-image: url(../images/torba-farmers.svg); }
  .main .recommended__events [class*="col-"]:nth-child(4) .card-img-top {
    background-image: url(../images/sea-caves.svg); }
  .main .nearby__events [class*="col-"]:nth-child(1) .card:nth-child(1) .card-img-top {
    background-image: url(../images/hot-air-balloon.svg); }
  .main .nearby__events [class*="col-"]:nth-child(2) .card-img-top {
    background-image: url(../images/full-day-desert.svg); }
  .main .nearby__events [class*="col-"]:nth-child(3) .card-img-top {
    background-image: url(../images/north-of-qatar.svg); }
  .main .nearby__events [class*="col-"]:nth-child(4) .card-img-top {
    background-image: url(../images/qatar-history.svg); }
  .main .booking {
    position: relative;
    min-height: 435px;
    padding-top: 16px; }
    @media (min-width: 576px) {
      .main .booking {
        padding-top: 50px; } }
    .main .booking .img-wrapper {
      flex-direction: column; }
      @media (min-width: 992px) {
        .main .booking .img-wrapper {
          display: table; } }
    .main .booking__content {
      z-index: 2;
      margin-top: 10px;
      margin-bottom: 20px;
      text-align: center; }
      @media (min-width: 992px) {
        .main .booking__content {
          margin-top: 86px;
          text-align: start; } }
    .main .booking__title {
      font-size: clamp(3.13rem, calc(2.97rem + 0.76vw), 3.63rem); }
    .main .booking__subtitle {
      margin-bottom: 44px; }
    .main .booking__app img:first-child {
      margin-bottom: 10px; }
      @media (min-width: 576px) {
        .main .booking__app img:first-child {
          margin-bottom: 0;
          margin-right: 10px; } }
    @media (min-width: 992px) {
      .main .booking__mobile {
        position: absolute;
        right: 19%;
        bottom: 0; } }
  .main .organizers-card {
    position: relative;
    flex-direction: column;
    height: 344px;
    border: 1px solid #ebebeb;
    border-radius: 10px; }
    .main .organizers-card__closeBtn {
      position: absolute;
      right: 20px;
      top: 20px; }
    .main .organizers-card img {
      display: inline-block;
      width: 56px;
      aspect-ratio: 1 / 1;
      border-radius: 50px;
      margin-top: 40px; }
    .main .organizers-card__title {
      margin-top: 5%;
      margin-bottom: 3%; }

.footer {
  min-height: 377px; }
  .footer__content {
    padding-top: 80px; }
    .footer__content [class*="col-md-"] {
      text-align: center; }
      @media (min-width: 992px) {
        .footer__content [class*="col-md-"] {
          text-align: start; } }
  .footer__btn {
    align-items: center;
    justify-content: center; }
    @media (min-width: 992px) {
      .footer__btn {
        align-items: flex-start;
        justify-content: start; } }
  .footer ul li a {
    font-size: 14px;
    color: #c8c7cc; }
    .footer ul li a:hover {
      color: #ebebeb; }
  .footer__app {
    justify-content: center;
    gap: 10px; }
    @media (min-width: 768px) {
      .footer__app {
        justify-content: start; } }
  .footer .icon-Instagram:hover:before {
    content: "\e906";
    color: red; }
  .footer .icon-twitter:hover:before {
    content: "\e90e"; }
  .footer .icon-facebook:hover:before {
    content: "\e904"; }
  .footer .icon-twitter:hover:before,
  .footer .icon-facebook:hover:before {
    color: #4387f4; }

.signin-page {
  min-height: 580px !important; }
  @media (min-width: 992px) {
    .signin-page {
      min-height: 515px; } }

@media (min-width: 992px) {
  .signup {
    display: flex;
    flex-wrap: wrap;
    overflow: hidden; } }

@media (min-width: 992px) {
  .signup > * {
    position: relative; } }

.signup__left {
  width: 100%;
  height: 18%; }
  @media (min-width: 992px) {
    .signup__left {
      width: 46.5%;
      height: 100%; } }

.signup__content {
  z-index: 1;
  width: 100%;
  height: 100%; }
  @media (min-width: 992px) {
    .signup__content {
      display: table;
      width: fit-content;
      height: fit-content;
      top: 60px;
      left: 160px; } }

.signup__title {
  display: none;
  margin-top: 38px;
  line-height: 32px; }
  @media (min-width: 992px) {
    .signup__title {
      display: block;
      padding-right: 30%; } }

.signup .img-wrapper img {
  position: absolute; }
  .signup .img-wrapper img:not(:first-child) {
    display: none; }
    @media (min-width: 992px) {
      .signup .img-wrapper img:not(:first-child) {
        display: block; } }
  .signup .img-wrapper img:nth-child(1) {
    top: -24px;
    left: -127px;
    transform: rotate(5deg); }
  .signup .img-wrapper img:nth-child(2) {
    top: 43px;
    left: -110px;
    transform: rotate(6deg); }
  .signup .img-wrapper img:nth-child(3) {
    top: 122px;
    left: 136px; }
  .signup .img-wrapper img:nth-child(4) {
    z-index: 1;
    left: -40px;
    bottom: -26px; }
  .signup .img-wrapper img:nth-child(5) {
    z-index: 2;
    left: -47px;
    bottom: -47px; }
  .signup .img-wrapper img:nth-child(6) {
    z-index: 1;
    left: -94px;
    bottom: -160px;
    transform: rotate(348deg); }
  .signup .img-wrapper img:nth-child(7) {
    right: -12px;
    bottom: -353px; }
  .signup .img-wrapper img:nth-child(8) {
    right: 33px;
    bottom: 0; }

.signup__right {
  padding: 20px 16px; }
  @media (min-width: 768px) {
    .signup__right {
      display: flex;
      align-items: center;
      justify-content: center; } }
  @media (min-width: 992px) {
    .signup__right {
      width: 53.5%;
      padding: 0; } }

.signup-page {
  min-height: 515px; }
  @media (min-width: 768px) {
    .signup-page {
      width: 70%; } }
  @media (min-width: 992px) {
    .signup-page {
      width: 90%; } }
  @media (min-width: 1200px) {
    .signup-page {
      width: 67.35%; } }
  .signup-page .logo {
    opacity: 1; }
    @media (min-width: 992px) {
      .signup-page .logo {
        opacity: 0; } }
  @media (min-width: 992px) {
    .signup-page__member {
      margin-bottom: 48px; } }
  .signup-page__member a {
    color: #ff7700; }
  .signup-page__content {
    z-index: 2;
    width: 100%;
    margin-top: 16px; }
    @media (min-width: 992px) {
      .signup-page__content {
        width: 81.71%;
        margin-top: 0; } }

.signup-google {
  min-height: 56px; }
  @media (min-width: 992px) {
    .signup-google {
      width: 344px;
      padding: 0; } }

.signup-facebook {
  width: 56px;
  height: 56px;
  background: #707070; }
  .signup-facebook:hover {
    background: white; }

.signup .icon-facebook:before {
  content: "\e904";
  font-size: 56px;
  color: #ebebeb; }

.signup .icon-facebook:hover:before {
  content: "\e904";
  color: #4387f4;
  transition: color 0.3s ease-in-out; }

.signup__or {
  height: 18px;
  margin-top: 30px; }
  .signup__or span {
    height: 1px;
    background: rgba(151, 151, 155, 0.5); }

.signup__form {
  margin-top: 16px; }
  .signup__form a {
    color: #ff7700; }

.signup .input-group,
.signup input[type="text"] {
  height: 56px; }
  @media (min-width: 992px) {
    .signup .input-group,
    .signup input[type="text"] {
      margin-block: 0; } }

.signup .form-floating input {
  height: 56px; }

.signup .form-floating :is(input, label) {
  padding-left: 50px; }

.signup .form-floating span {
  top: 33%;
  margin: 0 24px 0 14px; }

.signup .form-floating :is(.show, .hide) {
  font-size: 14px;
  cursor: pointer; }

.signup .form-floating .hide {
  display: none; }

.signup__fullname .form-floating :is(input, label) {
  padding: 16px; }

@media (min-width: 992px) {
  .signup__fullname {
    display: flex;
    gap: 16px; } }

.signup input:not([type="submit"]) {
  border-radius: 12px;
  font-weight: 600; }

.signup input[type="submit"]:focus {
  box-shadow: none; }

.signup .form-control:focus {
  border: none;
  box-shadow: 0 0 0 2px #ff7700;
  font-weight: 600; }

.signup .icon-envelope:before {
  content: "\e903"; }

.signup .icon-padlock:before {
  content: "\e909"; }

.signup .icon-envelope:before,
.signup .icon-padlock:before {
  color: #c8c7cc; }

.activate-account__content {
  margin-top: 22px; }
  @media (min-width: 992px) {
    .activate-account__content {
      margin-top: 0; } }

.activate-account__sub-heading {
  font-size: 14px; }

.activate-account__options {
  width: 82px;
  color: black;
  transition: padding-right 2s, color 0.5s; }
  .activate-account__options:hover {
    padding-right: 20px;
    color: #ff7700; }
  .activate-account__options .icon-left-arrow:before {
    content: "\e907";
    font-weight: 600;
    font-size: 24px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
